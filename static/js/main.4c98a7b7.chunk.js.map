{"version":3,"sources":["assets/img/ryan.JPG","assets/img/controller.svg","assets/img/server.svg","assets/img/layers.svg","assets/img/file-earmark-code.svg","assets/img/code-slash.svg","Components/HomePage/HomePage.js","Components/Hexagon/Hexagon.js","Components/Card/Card.js","Components/Experience/Experience.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","HomePage","class","id","src","Ryan","alt","width","height","href","Hexagon","props","icon","color","server","title","layers","fileEarmark","codeSlash","controller","style","borderRight","backgroundColor","borderLeft","Card","dir","transRight","transLeft","transUp","bodyText","text","left","right","up","className","Experience","date","company","position","desc","App","arista","gemini","target","rel","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c98a7b7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ryan.32bc8c9d.JPG\";","module.exports = __webpack_public_path__ + \"static/media/controller.dc2a2e16.svg\";","module.exports = __webpack_public_path__ + \"static/media/server.c1f1cb3e.svg\";","module.exports = __webpack_public_path__ + \"static/media/layers.d310f521.svg\";","module.exports = __webpack_public_path__ + \"static/media/file-earmark-code.24960db0.svg\";","module.exports = __webpack_public_path__ + \"static/media/code-slash.5a69227a.svg\";","import React from 'react';\nimport './HomePage.css';\nimport Ryan from \"../../assets/img/ryan.JPG\"\n\nfunction HomePage() {\n\n\n    return (\n        <div class=\"container\">\n\t\t<div class=\"content\">\n            <aside class=\"side\"> \n\t\t\t\t<figure class=\"picture\">\n\t\t\t\t\t<div class=\"picture-shadow\"></div>\n\t\t\t\t\t<img id=\"pictureImage\" class=\"picture-image\"\n\t\t\t\t\t\tsrc={Ryan} \n\t\t\t\t\t\talt=\"Portrait of Ryan Watkins\"\n\t\t\t\t\t\twidth=\"320\"\n\t\t\t\t\t\theight=\"320\"/> \n\t\t\t\t</figure>\n\t\t\t</aside>\n\t\t\t<main class=\"about\">\n\t\t\t\t<h1 class=\"name\">\n\t\t\t\t\tHi, I'm Ryan Watkins\n\t\t\t\t</h1>\n\t\t\t\t<p class=\"job\">\n\t\t\t      \tSoftware Engineer\n\t\t\t    </p>\n\t\t\t\t<hr class=\"hr\"/>\n\t\t\t\t<div class=\"description\">\n\t\t\t\t\t<p>\n\t\t\t\t\t\tI spend my time playing video games, playing basketball, video editing, coding and (occasionally) trying new things!\n\t\t\t\t\t</p> \n\t\t\t\t</div>\n\t\t\t\t<div class=\"contact\">\n\t\t\t\t\t<a class=\"button\" href=\"mailto:rdwatkin@outlook.com\">\n\t\t\t        Get in touch\n\t\t\t      </a>\n\t\t   \t\t</div>\n\t  \t\t</main>\n        </div>\n        </div>\n    );\n}\n\nexport default HomePage;","import React from 'react';\nimport './Hexagon.css'\nimport controller from '../../assets/img/controller.svg';\nimport server from '../../assets/img/server.svg';\nimport layers from '../../assets/img/layers.svg';\nimport fileEarmark from '../../assets/img/file-earmark-code.svg';\nimport codeSlash from '../../assets/img/code-slash.svg';\n\nfunction Hexagon (props) {\n\n    /* Icon Selection */\n    let icon\n    switch ( props.icon ){\n        case \"Server\":\n            icon = <img class=\"center\" src={server} alt=\"\" width=\"40\" height=\"40\" title=\"Bootstrap\"/>\n            break\n        case \"layers\":\n            icon = <img class=\"center\" src={layers} alt=\"\" width=\"40\" height=\"40\" title=\"Bootstrap\"/>\n            break\n        case \"fileEarmark\":\n            icon = <img class=\"center\" src={fileEarmark} alt=\"\" width=\"40\" height=\"40\" title=\"Bootstrap\"/>\n            break\n        case \"codeSlash\":\n            icon = <img class=\"center\" src={codeSlash} alt=\"\" width=\"40\" height=\"40\" title=\"Bootstrap\"/>\n            break\n        default:\n            icon = <img class=\"center\" src={controller} alt=\"\" width=\"40\" height=\"40\" title=\"Bootstrap\"/>\n    }\n\n    /* Color Selection */\n    let color\n    switch ( props.color ){\n        case \"blue\":\n            color = 'rgb(' + 178 + ',' + 226 + ',' + 255 + ')'\n            break\n        case \"orange\":\n            color = 'rgb(' + 255 + ',' + 216 + ',' + 97 + ')'\n            break\n        case \"green\":\n            color = 'rgb(' + 128 + ',' + 229 + ',' + 96 + ')'\n            break;\n        default:\n            color = 'rgb(' + 128 + ',' + 229 + ',' + 96 + ')'\n    }\n\n    return (\n        <div class=\"center\">\n            <div style={{borderRight: \"30px solid \" + color}} class=\"triangleUp\"></div>\n            <div style={{backgroundColor: color}} class=\"rectangle\">\n                {icon}\n            </div>\n            <div style={{borderLeft: \"30px solid \" + color}} class=\"triangle-down\"></div>\n        </div>\n    );\n}\n\nexport default Hexagon;","import React from 'react';\nimport './Card.css'\nimport Fade from 'react-reveal/Fade';\nimport Hexagon from '../Hexagon/Hexagon'\n\nfunction Card(props) {\n    const dir = props.dir\n    let transRight = false;\n    let transLeft = false;\n    let transUp = false;\n\n    if (dir === \"right\") {\n        transRight = true\n    } else if (dir === \"left\"){\n        transLeft = true\n    } else if (dir === \"top\"){\n        transUp = true\n    }\n\n    let icon = props.icon\n    let bodyText = props.text\n    let title = props.title\n\n    return (\n        <Fade left={transLeft} right={transRight} up={transUp} >\n            <div className=\"card\" >\n                <div className=\"hex\">\n                    <Hexagon color = {props.color} icon={icon}/>\n                </div>\n                <h2> {title} </h2>\n                <p> {bodyText} </p>\n            </div>\n        </Fade>\n    );\n}\n  \nexport default Card;","import React from 'react';\nimport './Experience.css';\nimport Fade from 'react-reveal/Fade';\n\nfunction Experience(props) {\n\n    return(\n        <div className=\"expContainer\">\n            <Fade up>\n            <div className=\"company\">\n                <h2> {props.date} </h2>\n                <h2> {props.company} </h2>\n            </div>\n            </Fade>\n            <Fade right>\n            <div className=\"description\">\n                <h2> {props.position} </h2>\n                <p> {props.desc} </p>\n            </div>\n            </Fade>\n        </div>\n    )\n\n}\n\nexport default Experience;\n","import React from 'react';\nimport './App.css';\nimport HomePage from './Components/HomePage/HomePage';\nimport Card from './Components/Card/Card';\nimport Fade from 'react-reveal/Fade';\nimport Experience from './Components/Experience/Experience'\n\nfunction App() {\n\n  const webDev = \"I have experience building websites using React, Javascript, Bootstrap, Babel, HTML, and CSS\"\n  const network = \"During my internship at Arista Networks, I worked routinely with common network protocols\"\n  const embedded = \"During my interships with Gemini Design and Arista Networks I spent the majority of my time writing embedded code in C\"\n\n  const arista = [  \"\\u25CF Feature Implementation: Expanded access control list matching capabilities on TCP flags using Python and C++ to help protect networks from TCP syn fragment DDos attacks. Wrote a command to configure these settings from the switch’s command line interface.\", <br/>, \"\\u25CF Bug Fixes: Fixed issues with internal testing tools crashing while sending TCP packets over IPv6. Closed a false positive test case in the routing tests. Removed checks on ingress interfaces when configuring egress support to avoid improper changes to topology properties.\"]\n  const UCSC = \"\\u25CF Grading: Reader for Introduction to Computer Networks. Graded student submitted labs, homework assignments and exams in a timely manner. Attended lab sections to help students with homework as well as answer questions about previously graded assignments.\"\n  const gemini = [\"\\u25CF Embedded Systems: Developed firmware in C for a Nucleo F401re micro-controller to communicate with the company’s custom board over SPI and to send and receive data through a computer’s serial communication port using USART thereby enabling the company to control their custom board from a GUI.\", <br/>,\n  \"\\u25CF User Interface Design: Designed and implemented a serial communication port monitor using Microsoft Visual Studio in C# which sends and receives data from USB.\", <br/>, \"\\u25CF Scholarship: Received the Gemini Design Engineering Scholarship at the end of the summer internship for my abilities to quickly come up to speed on new technologies.\"]\n  const pt = [\"\\u25CF Help Desk & Data Entry: Promptly handled repair requests on a broad range of office technologies to maximize work space efficiency. Maintained and updated electronic client data daily to ensure company information was always up to date.\"]\n\n\n  return (\n    <div className=\"App\">\n      <div className=\"wallpaper\" ></div>\n      <Fade up>\n        <HomePage />\n      </Fade>\n      <div>\n        <Fade>\n           <h1 id=\"title\" >Skills</h1>\n        </Fade>\n        <div className= \"list\">\n          <Card dir=\"right\" color=\"green\" title=\"Website Development\" text={webDev} icon=\"layers\" />\n          <Card dir=\"top\" color=\"blue\" title=\"Networking\" text={network} icon=\"Server\"/>\n          <Card dir=\"left\" color=\"orange\" title=\"Embedded Programming\" text={embedded} icon=\"codeSlash\"/>\n        </div>\n      </div>\n      <div>\n          <Fade>\n            <h1 id=\"title\" >Experience</h1>\n          </Fade>\n        <div className=\"exp\">\n          <Experience date={[\"Oct. 2019 -\", <br/>, \"Dec. 2019\"]} company=\"University of California, Santa Cruz\" position=\"Reader\" desc={UCSC}/>\n          <Experience date={[\"Jul. 2019 -\", <br/>, \"Sep. 2019\"]} company=\"Arista Networks\" position=\"Software Engineering Intern\" desc={arista}/>\n          <Experience date={[\"Jul. 2018 -\", <br/>, \"Sep. 2018\"]} company=\"Gemini Design\" position=\"Software Engineering Intern\" desc={gemini}/>\n          <Experience date={[\"Jul. 2017 -\", <br/>, \"Sep. 2017\"]} company=\"Patenaude and Felix APC\" position=\"Information Technology Intern\" desc={pt}/>\n        </div>\n      </div>\n\n      <div>\n          <Fade>\n            <h1 id=\"title\" >Education</h1>\n          </Fade>\n        <div className=\"exp\">\n          <Experience date={[\"Sep. 2016 -\", <br/>, \"Dec. 2019\"]} company=\"University of California, Santa Cruz\" position=\"Bachelor of Science\" desc=\"Major in Computer Science. Graduated with honors. GPA: 3.52 / 4\"/>\n        </div>\n      </div>\n\n      <div class=\"social\">\n        <Fade>\n          <h1 id=\"title\" >Contact</h1>\n        </Fade>\n        <Fade left>\n          <a class=\"btn\" href=\"https://www.linkedin.com/in/ryan-watkins-08a523126/\" target=\"_blank\" rel=\"noopener noreferrer\">LinkedIn</a>\n          <a class=\"btn\" href=\"https://github.com/rdwatkin\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a>\n        </Fade>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n/* Project Tools:\n * React\n * Babel\n * Jsx\n * Bootstrap Icons\n * React-Bootstrap\n * React-Reveal */\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}